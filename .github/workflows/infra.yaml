name: Update Azure Infra

on:
  workflow_dispatch:
    inputs:
      terraform-choice:
        type: choice
        description: Select the action for the infra
        options:
        - create/update
        - destroy
      env-choice:
        type: choice
        description: Select the Environment
        options:
        - dev
        - stage
        - prod

env:
  tf_version: '1.7.4'
  tf_working_dir: 'iac/terraform/envs/${{ inputs.env-choice }}'

permissions:
      id-token: write
      contents: read  

jobs:
  update-infra:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env-choice }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: ${{ env.tf_version }}

      - name: Login to Azure
        uses: azure/login@v1.5.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'terraform init'
        working-directory: ${{ env.tf_working_dir }}
        run: |
          terraform init

      - name: 'terraform plan'
        if: inputs.terraform-choice == 'create/update'
        working-directory: ${{ env.tf_working_dir }}
        run: |
          terraform plan -out=tfplan -var-file=${{ inputs.env-choice }}.tfvars

      # - name: 'terraform apply'
      #   if: inputs.terraform-choice == 'create/update'
      #   working-directory: ${{ env.tf_working_dir }}
      #   run: |
      #     terraform apply -auto-approve tfplan

      # - name: 'terraform destroy-all'
      #   if: inputs.terraform-choice == 'destroy'
      #   working-directory: ${{ env.tf_working_dir }}
      #   run: |
      #     terraform destroy -auto-approve tfplan

      - name: 'Approval for Terraform Changes'
        if: inputs.terraform-choice == 'create/update' || inputs.terraform-choice == 'destroy'
        uses: appleboy/approval@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "Do you approve applying Terraform changes?"
          steps: |
            - name: 'terraform apply'
              run: terraform apply -auto-approve tfplan
              if: inputs.terraform-choice == 'create/update'
              working-directory: ${{ env.tf_working_dir }}
            - name: 'terraform destroy-all'
              run: terraform destroy -auto-approve tfplan
              if: inputs.terraform-choice == 'destroy'
              working-directory: ${{ env.tf_working_dir }}
